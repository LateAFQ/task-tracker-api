"""empty message

Revision ID: 01_d07098932e7c
Revises: 
Create Date: 2025-01-27 00:13:16.782784

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '01_d07098932e7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('name', sa.Enum('Admin', 'User', name='role_type', native_enum=False), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=False)
    op.create_table('user',
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('active', sa.BOOLEAN(), nullable=False),
    sa.Column('role_uuid', sa.UUID(), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_uuid'], ['role.uuid'], name='fk_user_role', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('idx_lower_login', 'user', [sa.text('lower(login)')], unique=True)
    op.create_index(op.f('ix_user_login'), 'user', ['login'], unique=True)
    op.create_table('task',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='taskpriority'), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], name='fk_task_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('task_category',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=True),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], name='fk_taskcategory_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_task_category_name'), 'task_category', ['name'], unique=False)
    op.create_table('task_category_association',
    sa.Column('task_uuid', sa.UUID(), nullable=False),
    sa.Column('category_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_uuid'], ['task_category.uuid'], ),
    sa.ForeignKeyConstraint(['task_uuid'], ['task.uuid'], ),
    sa.PrimaryKeyConstraint('task_uuid', 'category_uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_category_association')
    op.drop_index(op.f('ix_task_category_name'), table_name='task_category')
    op.drop_table('task_category')
    op.drop_table('task')
    op.drop_index(op.f('ix_user_login'), table_name='user')
    op.drop_index('idx_lower_login', table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_table('role')
    # ### end Alembic commands ###
